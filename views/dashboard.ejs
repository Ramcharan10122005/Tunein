<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music Dashboard</title>
    <script src="https://unpkg.com/lucide@latest"></script>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/main.css">
    <link rel="stylesheet" href="/responsive.css">
    <link rel="stylesheet" href="/responsive.css">
    <style>
        .like-btn {
            background: none;
            border: none;
            cursor: pointer;
            padding: 0;
            margin: 0;
        }

        .like-btn i.lucide-heart {
            stroke: white;
            fill: none;
            transition: all 0.3s ease;
        }

        .like-btn:hover i.lucide-heart {
            stroke: #b62020;
        }

        .like-btn[data-liked="true"] i.lucide-heart {
            stroke: #9E1C1C;
            fill: #9E1C1C;
        }

        .like-btn[data-liked="true"] i.lucide-heart path {
            fill: #9E1C1C;
            stroke: #9E1C1C;
        }

        .ad-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.95);
            z-index: 1000;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .ad-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            width: 100%;
            height: 100%;
            padding: 20px;
        }

        .ad-image {
            width: 100%;
            height: 80vh;
            object-fit: contain;
            border-radius: 8px;
        }

        .ad-title {
            color: white;
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            margin-top: 20px;
        }

        .ad-timer {
            color: #b3b3b3;
            font-size: 18px;
            text-align: center;
            margin-top: 10px;
        }

        .ad-close {
            position: absolute;
            top: 20px;
            right: 20px;
            background: none;
            border: none;
            color: white;
            font-size: 24px;
            cursor: pointer;
            padding: 10px;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .featured-playlists {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .recently-played {
                grid-template-columns: repeat(3, 1fr);
            }
            
            .mood-section {
                grid-template-columns: repeat(3, 1fr);
            }
            
            .section-title {
                font-size: 22px;
            }
            
            .playlist-card {
                padding: 15px;
            }
            
            .playlist-card img {
                width: 120px;
                height: 120px;
            }
            
            .playlist-card h3 {
                font-size: 16px;
            }
            
            .playlist-card p {
                font-size: 12px;
            }
            
            .mood-card {
                padding: 15px;
            }
            
            .mood-card img {
                width: 100px;
                height: 100px;
            }
            
            .mood-card h3 {
                font-size: 16px;
            }
        }
        
        @media (max-width: 768px) {
            .featured-playlists {
                grid-template-columns: 1fr;
            }
            
            .recently-played {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .mood-section {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .section-title {
                font-size: 20px;
            }
            
            .playlist-card {
                padding: 12px;
            }
            
            .playlist-card img {
                width: 100px;
                height: 100px;
            }
            
            .playlist-card h3 {
                font-size: 14px;
            }
            
            .playlist-card p {
                font-size: 11px;
            }
            
            .mood-card {
                padding: 12px;
            }
            
            .mood-card img {
                width: 80px;
                height: 80px;
            }
            
            .mood-card h3 {
                font-size: 14px;
            }
            
            .ad-image {
                height: 60vh;
            }
            
            .ad-title {
                font-size: 20px;
            }
            
            .ad-timer {
                font-size: 16px;
            }
        }
        
        @media (max-width: 480px) {
            .recently-played {
                grid-template-columns: 1fr;
            }
            
            .mood-section {
                grid-template-columns: 1fr;
            }
            
            .section-title {
                font-size: 18px;
            }
            
            .playlist-card {
                padding: 10px;
            }
            
            .playlist-card img {
                width: 80px;
                height: 80px;
            }
            
            .playlist-card h3 {
                font-size: 13px;
            }
            
            .playlist-card p {
                font-size: 10px;
            }
            
            .mood-card {
                padding: 10px;
            }
            
            .mood-card img {
                width: 60px;
                height: 60px;
            }
            
            .mood-card h3 {
                font-size: 13px;
            }
            
            .ad-image {
                height: 50vh;
            }
            
            .ad-title {
                font-size: 18px;
            }
            
            .ad-timer {
                font-size: 14px;
            }
        }
    </style>
</head>

<body>
    <header>
        <div class="menu-container">
            <button class="menu-btn" id="menu-btn"><i data-lucide="list"></i></button>
            <span class="tunein"><img src="/images/Copy_of_Copy_of_TuneIn-removebg-preview.png" alt="TuneIn Logo">Tune
                In</span>
        </div>
        <div class="search-container">
            <form id="search-form" onsubmit="handleSearch(event)">
                <i data-lucide="search" class="search-icon"></i>
                <input type="text" name="query" id="search-input" placeholder="Search songs, playlists..."
                    class="search-bar">
                <button type="submit" style="display: none;"></button>
            </form>
        </div>
        <% if (locals.user) { %>
            <div class="username-container">
                <p class="usernam-greet">Welcome,</p>
                <p class="username-name">
                    <%= locals.user %>!
                </p>
            </div>
            <% } else { %>
                <div class="sign-in-box" onclick="window.location.href='/login'">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                        stroke="#eeecec" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="lucide lucide-user-round-pen">
                        <path d="M2 21a8 8 0 0 1 10.821-7.487" />
                        <path
                            d="M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z" />
                        <circle cx="10" cy="8" r="5" />
                    </svg>
                    <span>Sign In</span>
                </div>
                <% } %>
    </header>

    <div id="search-results" class="search-results" style="display: none;">
        <h2>Search Results</h2>
        <div class="songs-grid" id="search-results-grid">
            <!-- Search results will be populated here -->
        </div>
    </div>

    <div class="sidebar">
        <ul>
            <li onclick="redirectTo('home')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-house">
                    <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8" />
                    <path
                        d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
                </svg> Home
            </li>
            <li onclick="redirectTo('liked-songs')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-heart">
                    <path
                        d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z" />
                </svg> Liked Songs
            </li>
            <li onclick="redirectTo('playlists')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-list-music">
                    <path d="M21 15V6" />
                    <path d="M18.5 18a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z" />
                    <path d="M12 12H3" />
                    <path d="M16 6H3" />
                    <path d="M12 18H3" />
                </svg> Playlists
            </li>
            <li onclick="redirectTo('Mood-based')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-smile-plus">
                    <path d="M22 11v1a10 10 0 1 1-9-10" />
                    <path d="M8 14s1.5 2 4 2 4-2 4-2" />
                    <line x1="9" x2="9.01" y1="9" y2="9" />
                    <line x1="15" x2="15.01" y1="9" y2="9" />
                    <path d="M16 5h6" />
                    <path d="M19 2v6" />
                </svg> Mood-based
            </li>
            <li onclick="redirectTo('premium')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-crown">
                    <path
                        d="M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z" />
                    <path d="M5 21h14" />
                </svg> Premium
            </li>
            <li onclick="redirectTo('profile')">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none"
                    stroke="#b62020" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                    class="lucide lucide-user-pen">
                    <path d="M11.5 15H7a4 4 0 0 0-4 4v2" />
                    <path
                        d="M21.378 16.626a1 1 0 0 0-3.004-3.004l-4.01 4.012a2 2 0 0 0-.506.854l-.837 2.87a.5.5 0 0 0 .62.62l2.87-.837a2 2 0 0 0 .854-.506z" />
                    <circle cx="10" cy="7" r="4" />
                </svg> Profile
            </li>
        </ul>
    </div>

    <div class="main-content">
        <div class="carousel-container" id="carousel-container">
            <div class="carousel">
                <div class="slide" onclick="redirectToPlay('A-List Pop')">
                    <img src="/images/thegiver.webp" alt="A-List Pop">
                    <div class="text">
                        <h3>A-List Pop</h3>
                        <p>Apple Music Pop</p>
                        <span>Chappell Roan gets the job done on "The Giver."</span>
                    </div>
                </div>
                <div class="slide" onclick="redirectToPlay('Hit Me Hard and Soft')">
                    <img src="/images/album6.webp" alt="Love Me To Heaven">
                    <div class="text">
                        <h3>Hit Me Hard and Soft</h3>
                        <p>Studio album by Billie Eilish</p>
                        <span>New release.</span>
                    </div>
                </div>
                <div class="slide" onclick="redirectToPlay('Calm Down')">
                    <img src="/images/album4.avif" alt="Just Us">
                    <div class="text">
                        <h3>Calm Down</h3>
                        <p>Selena Gomez & benny blanco</p>
                        <span>Spatial audio with dolby atmos 🎧.</span>
                    </div>
                </div>
                <div class="slide" onclick="redirectToPlay('Puro Pop')">
                    <img src="/images/album5.webp" alt="Younger and Hotter">
                    <div class="text">
                        <h3>Puro Pop</h3>
                        <p>Apple Music Pop Latino</p>
                        <span>Sebastian Yatra goes country.Hear it in spatial audio with Dolby Atmos.</span>
                    </div>
                </div>
                <div class="slide" onclick="redirectToPlay('JENNIE')">
                    <img src="/images/jennie.jpg" alt="JENNIE on Ruby">
                    <div class="text">
                        <h3>Track by Track: JENNIE</h3>
                        <p>Apple Music</p>
                        <span>JENNIE talks through Ruby.</span>
                    </div>
                </div>
                <div class="slide" onclick="redirectToPlay('GIRASOLES')">
                    <img src="/images/album3.webp" alt="GIRASOLES">
                    <div class="text">
                        <h3>GIRASOLES</h3>
                        <p>Jay Wheeler</p>
                        <span>A "thank-you note" album.</span>
                    </div>
                </div>
            </div>
            <button class="prev" onclick="moveSlide(-1)">&#10094;</button>
            <button class="next" onclick="moveSlide(1)">&#10095;</button>
        </div>

        <!-- Latest Songs Section -->
        <div class="latest-songs">
            <h2>Latest Songs</h2>
            <div class="songs-grid">
                <div class="song">
                    <img src="/images/song1.jpg" alt="Just Us">
                    <div>
                        <h4>Just Us (feat. Doja Cat)</h4>
                        <p>Jack Harlow</p>
                    </div>
                </div>
                <div class="song">
                    <img src="/images/song2.webp" alt="Younger and Hotter">
                    <div>
                        <h4>Younger And Hotter Than Me</h4>
                        <p>Selena Gomez, Benny Blanco</p>
                    </div>
                </div>
                <div class="song">
                    <img src="/images/song3.jpg" alt="I'm A Little Crazy">
                    <div>
                        <h4>I'm A Little Crazy</h4>
                        <p>Morgan Wallen</p>
                    </div>
                </div>
                <div class="song">
                    <img src="/images/song4.jpg" alt="Love Me To Heaven">
                    <div>
                        <h4>Love Me To Heaven</h4>
                        <p>Jonas Brothers</p>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="music-controls">
        <% if (locals.showAd && locals.ad) { %>
            <div class="ad-container" id="adContainer">
                <div class="ad-content">
                    <img src="<%= ad.image %>" alt="Advertisement" class="ad-image">
                    <div class="ad-title">
                        <%= ad.title %>
                    </div>
                    <audio id="ad-audio" src="<%= ad.audio %>" preload="auto"></audio>
                    <div class="ad-timer">Ad will end in <span id="adCountdown">30</span> seconds</div>
                </div>
            </div>
            <% } %>
                <div class="track-info">
                    <% if (locals.song) { %>
                        <img src="<%= song.image %>" alt="Song Image" class="song-icon">
                        <% } else { %>
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"
                                fill="none" stroke="#eeecec" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" class="lucide lucide-music">
                                <path d="M9 18V5l12-2v13" />
                                <circle cx="6" cy="18" r="3" />
                                <circle cx="18" cy="16" r="3" />
                            </svg>
                            <% } %>

                                <div>
                                    <% if (locals.song) { %>
                                        <div id="track-name"
                                            onclick="redirectToPlay('<%= song.title %>', '<%= song.url %>')">
                                            <%= song.title %>
                                        </div>
                                        <div id="artist-name" style="font-size: 12px; color: #b3b3b3; cursor: pointer;"
                                            onclick="redirectToArtist('<%= song.artist %>')">
                                            <%= song.artist %>
                                        </div>
                                        <% } else { %>
                                            <div id="track-name">Song Name</div>
                                            <div id="artist-name" style="font-size: 12px; color: #b3b3b3;">Artist Name
                                            </div>
                                            <% } %>
                                </div>
                </div>

                <div class="controls">
                    <audio id="audio-player">
                        <source id="audio-source" src="<%= locals.song ? locals.song.audio : '' %>" type="audio/mpeg">
                        Your browser does not support the audio tag.
                    </audio>
                    <button id="prev" onclick="redirecttorand()"><i data-lucide="skip-back"></i></button>
                    <button id="play-pause">
                        <i id="play-icon" data-lucide="play"></i>
                    </button>
                    <button id="next" onclick="redirecttorand()"><i data-lucide="skip-forward"></i></button>
                </div>

                <div class="progress-bar" id="progress-container">
                    <span id="progress"></span>
                </div>

                <div class="controls">
                    <button class="like-btn" id="like-btn" data-liked="false" onclick="redirectToLike()"><i
                            data-lucide="heart"></i></button>
                    <div class="controls">
                        <div class="volume-container">
                            <button id="volume-btn"><i data-lucide="volume-2"></i></button>
                            <div class="volume-slider" id="volume-slider" style="bottom: 140px;left:-100px;">
                                <input type="range" id="volume-input" min="0" max="100" value="50">
                            </div>
                        </div>
                    </div>
                </div>
    </div>
    </div>

    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const menuBtn = document.getElementById("menu-btn");
            const sidebar = document.querySelector(".sidebar");
            const body = document.body;
            const audio = document.getElementById("audio-player");
            const playPauseBtn = document.getElementById("play-pause");
            const playIcon = document.getElementById("play-icon");
            const progressBar = document.getElementById("progress");
            const progressContainer = document.getElementById("progress-container");
            const volumeSlider = document.getElementById("volume-input");
            const likeBtn = document.getElementById("like-btn");
            const likeIcon = likeBtn.querySelector("i");
            const like = document.getElementsByClassName("lucide lucide-heart")
            // Like button functionality
            playPauseBtn.addEventListener("click", togglePlayPause);
            lucide.createIcons();
            menuBtn.addEventListener("click", function () {
                sidebar.classList.toggle("open");
                body.classList.toggle("sidebar-open");

                // Adjust carousel slides after sidebar toggle
                adjustCarousel();
            });
            audio.addEventListener("timeupdate", () => {
                const progress = (audio.currentTime / audio.duration) * 100;
                progressBar.style.width = progress + "%";
            });
            progressContainer.addEventListener("click", (e) => {
                const rect = progressContainer.getBoundingClientRect();
                const clickX = e.clientX - rect.left;
                const width = rect.width;
                const seekTime = (clickX / width) * audio.duration;
                audio.currentTime = seekTime;
            });
            audio.addEventListener("ended", () => {
                progressBar.style.width = "0%"; // Reset when audio ends
                let icon = document.getElementById("play-icon");
                icon.setAttribute("data-lucide", icon.getAttribute("data-lucide") === "play" ? "pause" : "play");
                lucide.createIcons();
            });
            volumeSlider.addEventListener("input", function () {
                let volume = this.value / 100;
                audio.volume = volume;
                updateVolumeSlider(value);
                console.log("Volume: ", volume);
            });
            // Sidebar is hidden by default now
            function togglePlayPause() {
                let icon = document.getElementById("play-icon");
                icon.setAttribute("data-lucide", icon.getAttribute("data-lucide") === "play" ? "pause" : "play");
                lucide.createIcons();
                if (audio.paused) {
                    audio.play();
                } else {
                    audio.pause();
                }
            }
            function updateProgress() {
                const progress = (audio.currentTime / audio.duration) * 100;
                progressBar.style.width = progress + "%";
            }

            function setVolume() {
                audio.volume = volumeSlider.value / 100;
            }

            // Initialize carousel
            initCarousel();

            // Volume slider toggle
            document.getElementById('volume-btn').addEventListener('click', () => {
                const slider = document.getElementById('volume-slider');
                slider.style.display = slider.style.display === 'block' ? 'none' : 'block';
            });

            // Initialize Lucide icons


            // Initial adjustment for carousel based on sidebar state
            adjustCarousel();

            // Also adjust on window resize
            window.addEventListener('resize', adjustCarousel);

            // Add search functionality
            const searchForm = document.getElementById('search-form');
            const searchInput = document.getElementById('search-input');
            const searchResults = document.getElementById('search-results');
            const carouselContainer = document.getElementById('carousel-container');
            const searchResultsGrid = document.getElementById('search-results-grid');

            searchForm.addEventListener('submit', handleSearch);
            searchInput.addEventListener('input', handleSearch);

            async function handleSearch(event) {
                event.preventDefault();
                const query = searchInput.value.trim();

                if (query.length === 0) {
                    searchResults.style.display = 'none';
                    carouselContainer.style.display = 'block';
                    return;
                }

                try {
                    const response = await fetch(`/search?query=${encodeURIComponent(query)}`);
                    const data = await response.json();

                    // Hide carousel and show search results
                    carouselContainer.style.display = 'none';
                    searchResults.style.display = 'block';

                    // Clear previous results
                    searchResultsGrid.innerHTML = '';

                    // Display new results
                    data.forEach(song => {
                        const songElement = document.createElement('div');
                        songElement.className = 'song';
                        songElement.id = 'searched-song';
                        songElement.innerHTML = `
                            <img src="${song.image}" alt="${song.title} style="width:64px;height:64px"">
                            <div>
                                <h4>${song.title}</h4>
                                <p>${song.artist}</p>
                            </div>
                        `;
                        songElement.onclick = () => redirectToPlay(song.title);
                        searchResultsGrid.appendChild(songElement);
                    });
                } catch (error) {
                    console.error('Error searching:', error);
                }
            }
        });
        function redirecttorand() {
            window.location.href = `/random-song`;
        }
        function updateVolumeSlider(value) {
            const slider = document.querySelector('.volume-slider');
            if (slider) {
                slider.style.setProperty('--volume-height', `${value}%`);
            }
        }
        function redirectTo(pageName) {
            // For demo purposes just log the navigation
            // console.log(`Navigating to: ${pageName}`);
            // In production this would be:
            window.location.href = `/${pageName}`;
        }
        function redirectToPlay(title) {
            const encodedTitle = encodeURIComponent(title); // Encode spaces & special characters
            window.location.href = `/play/${encodedTitle}`;
        }
        function redirectToLike() {
            const pathname = window.location.pathname; // "/play/Calm%20Down"
            const title = decodeURIComponent(pathname.split("/").pop()); // "Calm Down"
            console.log(title);
            const encodedTitle = encodeURIComponent(title); // Encode spaces & special characters
            window.location.href = `/like/${encodedTitle}`;
        }
        // Carousel functionality for responsive slides per view
        let currentGroup = 0;
        let slidesPerView = 3; // Default, will be adjusted based on screen size and sidebar 

        function initCarousel() {
            // Set initial position
            updateCarouselPosition();

            // Auto rotation (optional)
            setInterval(() => moveSlide(1), 5000);
        }

        function adjustCarousel() {
            // Determine how many slides should be shown based on window width and sidebar state
            const windowWidth = window.innerWidth;
            const sidebarOpen = document.body.classList.contains("sidebar-open");
            const effectiveWidth = sidebarOpen && windowWidth > 768 ? windowWidth - 250 : windowWidth; // Account for sidebar width

            if (effectiveWidth < 768) {
                slidesPerView = 1;
            } else if (effectiveWidth < 1024) {
                slidesPerView = 2;
            } else {
                slidesPerView = 3;
            }

            // Update slide widths
            const slides = document.querySelectorAll(".slide");
            slides.forEach(slide => {
                slide.style.minWidth = `calc(${100 / slidesPerView}% - 20px)`;
            });

            // Reset currentGroup if necessary to avoid empty space
            const totalSlides = document.querySelectorAll(".slide").length;
            const maxGroups = Math.ceil(totalSlides / slidesPerView) - 1;
            if (currentGroup > maxGroups) {
                currentGroup = maxGroups;
            }

            // Reposition carousel to maintain visible slides
            updateCarouselPosition();
        }

        function updateCarouselPosition() {
            const carousel = document.querySelector(".carousel");
            const slides = document.querySelectorAll(".slide");
            const totalSlides = slides.length;
            const maxGroups = Math.ceil(totalSlides / slidesPerView) + 1;

            // Keep currentGroup within bounds
            if (currentGroup < 0) currentGroup = maxGroups;
            if (currentGroup > maxGroups) currentGroup = 0;

            // Calculate new position
            const newPosition = -currentGroup * (100 / slidesPerView);
            carousel.style.transform = `translateX(${newPosition}%)`;
        }

        function moveSlide(step) {
            currentGroup += step;
            updateCarouselPosition();
        }

        document.addEventListener('DOMContentLoaded', function () {
            const adContainer = document.getElementById('adContainer');
            const adAudio = document.getElementById('ad-audio');
            const adCountdown = document.getElementById('adCountdown');
            const playPauseBtn = document.getElementById("play-pause");
            if (adContainer && adAudio && adCountdown) {
                let timeLeft = 30;

                // Pause any background music
                const mainAudio = document.getElementById('audio-player');
                if (mainAudio) {
                    mainAudio.pause();
                }

                // Ensure ad audio plays
                adAudio.load(); // Explicitly load the audio
                const playPromise = adAudio.play();

                if (playPromise !== undefined) {
                    playPromise.then(() => {
                        console.log('Ad audio started playing');
                    }).catch(error => {
                        console.error('Error playing ad audio:', error);
                        // Try playing again after user interaction
                        document.addEventListener('click', function playOnClick() {
                            adAudio.play().catch(console.error);
                            document.removeEventListener('click', playOnClick);
                        }, { once: true });
                    });
                }

                const countdownInterval = setInterval(() => {
                    timeLeft--;
                    adCountdown.textContent = timeLeft;

                    if (timeLeft <= 0) {
                        closeAd();
                    }
                }, 1000);

                adAudio.addEventListener('ended', () => {
                    closeAd();
                });

                // Make closeAd function available globally
                window.closeAd = function () {
                    clearInterval(countdownInterval);
                    adContainer.style.display = 'none';
                    adAudio.pause();
                    // Resume background music if it was playing
                    if (mainAudio) {
                        mainAudio.play();
                        let icon = document.getElementById("play-icon");
                        icon.setAttribute("data-lucide", icon.getAttribute("data-lucide") === "play" ? "pause" : "play");
                        lucide.createIcons();
                        if (audio.paused) {
                            audio.play();
                        } else {
                            audio.pause();
                        }
                    }
                };
            }
        });
    </script>
</body>

</html>