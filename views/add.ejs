<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Songs - Tune In</title>
    <script src="https://unpkg.com/lucide@latest"></script>
    <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/main.css">
    <link rel="stylesheet" href="/responsive.css">
     <link rel="stylesheet" href="/responsive.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #121212;
            color: #eeecec;
        }

        .container {
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
        }

        h2 {
            color: #eeecec;
            font-family: 'Pacifico', cursive;
            margin-bottom: 30px;
        }

        form {
            background: linear-gradient(45deg, #1a1a1a, #2a2a2a);
            padding: 30px;
            border-radius: 12px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .input-group {
            position: relative;
            display: flex;
            align-items: center;
        }

        .input-group i {
            position: absolute;
            left: 12px;
            color: #b62020;
            width: 20px;
            height: 20px;
            stroke-width: 1.5;
        }

        input[type="text"] {
            padding: 12px 12px 12px 40px;
            font-size: 16px;
            border: 1px solid #404040;
            border-radius: 5px;
            background: #404040;
            color: #eeecec;
            transition: border-color 0.3s ease;
            width: 100%;
        }

        input[type="text"]:focus {
            outline: none;
            border-color: #b62020;
        }

        .file-input-container {
            position: relative;
            background: #404040;
            padding: 15px;
            border-radius: 5px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .file-input-container i {
            color: #b62020;
            width: 24px;
            height: 24px;
            stroke-width: 1.5;
        }

        input[type="file"] {
            flex: 1;
            padding: 8px;
            background: transparent;
            border: none;
            color: #eeecec;
        }

        .file-input-container label {
            color: #b3b3b3;
            font-size: 14px;
        }

        button[type="submit"] {
            padding: 12px;
            font-size: 16px;
            background: #b62020;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        button[type="submit"]:hover {
            background: #d42a2a;
        }

        button[type="submit"] i {
            width: 20px;
            height: 20px;
            stroke-width: 1.5;
        }

        .songs-list {
            margin-top: 40px;
        }

        .songs-list h2 {
            margin-bottom: 20px;
        }

        ul {
            list-style: none;
            padding: 0;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        li {
            background: linear-gradient(45deg, #1a1a1a, #2a2a2a);
            margin: 0;
            padding: 20px;
            border-radius: 12px;
            display: flex;
            flex-direction: column;
            gap: 15px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        li:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

        li strong {
            color: #b62020;
            font-size: 1.2em;
            margin-bottom: 5px;
            display: block;
        }

        .song-info {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .song-info-row {
            display: flex;
            align-items: center;
            gap: 10px;
            color: #b3b3b3;
        }

        .song-info i {
            color: #b62020;
            width: 18px;
            height: 18px;
            stroke-width: 1.5;
            flex-shrink: 0;
        }

        .song-info span {
            font-size: 0.9em;
        }

        .delete-btn {
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            color: #b62020;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 35px;
        }

        .delete-btn:hover {
            background-color: rgba(182, 32, 32, 0.1);
            transform: scale(1.1);
        }

        .delete-btn i {
            width: 20px;
            height: 20px;
            stroke-width: 1.5;
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
                margin: 20px auto;
            }
            
            form {
                padding: 25px;
            }
            
            h2 {
                font-size: 1.8rem;
            }
            
            .input-group {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .input-group i {
                position: static;
                margin-bottom: 8px;
            }
            
            input[type="text"] {
                padding: 12px;
                width: 100%;
            }
            
            .file-input-container {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .file-input-container i {
                margin-bottom: 8px;
            }
            
            .file-input-container label {
                margin-bottom: 8px;
            }
            
            .notification-container {
                top: 15px;
                right: 15px;
            }
            
            .notification-bell {
                width: 40px;
                height: 40px;
            }
            
            .notification-bell i {
                width: 20px;
                height: 20px;
            }
            
            .notification-count {
                width: 18px;
                height: 18px;
                font-size: 10px;
            }
            
            .feedback-modal {
                width: 90%;
                max-height: 80vh;
            }
            
            .feedback-list {
                max-height: 60vh;
            }
            
            .feedback-item {
                padding: 12px;
            }
            
            .feedback-item h3 {
                font-size: 16px;
            }
            
            .feedback-item p {
                font-size: 14px;
            }
            
            .feedback-details {
                padding: 15px;
            }
            
            .feedback-details h3 {
                font-size: 18px;
            }
            
            .feedback-details p {
                font-size: 14px;
            }
            
            .feedback-details .meta {
                font-size: 12px;
            }
            
            ul {
                grid-template-columns: 1fr;
            }
            
            li {
                padding: 15px;
            }
            
            .song-info h3 {
                font-size: 18px;
            }
            
            .song-info p {
                font-size: 14px;
            }
            
            .delete-btn {
                padding: 6px;
            }
            
            .delete-btn i {
                width: 18px;
                height: 18px;
            }
        }
        
        @media (max-width: 480px) {
            .container {
                padding: 10px;
                margin: 15px auto;
            }
            
            form {
                padding: 20px;
            }
            
            h2 {
                font-size: 1.5rem;
            }
            
            .input-group i {
                width: 18px;
                height: 18px;
            }
            
            input[type="text"] {
                font-size: 14px;
                padding: 10px;
            }
            
            .file-input-container {
                padding: 12px;
            }
            
            .file-input-container i {
                width: 20px;
                height: 20px;
            }
            
            .file-input-container label {
                font-size: 12px;
            }
            
            button[type="submit"] {
                padding: 12px;
                font-size: 16px;
            }
            
            .notification-container {
                top: 10px;
                right: 10px;
            }
            
            .notification-bell {
                width: 35px;
                height: 35px;
                padding: 8px;
            }
            
            .notification-bell i {
                width: 18px;
                height: 18px;
            }
            
            .notification-count {
                width: 16px;
                height: 16px;
                font-size: 9px;
            }
            
            .feedback-modal {
                width: 95%;
                padding: 15px;
            }
            
            .feedback-list {
                max-height: 50vh;
            }
            
            .feedback-item {
                padding: 10px;
            }
            
            .feedback-item h3 {
                font-size: 14px;
            }
            
            .feedback-item p {
                font-size: 12px;
            }
            
            .feedback-details {
                padding: 12px;
            }
            
            .feedback-details h3 {
                font-size: 16px;
            }
            
            .feedback-details p {
                font-size: 12px;
            }
            
            .feedback-details .meta {
                font-size: 10px;
            }
            
            li {
                padding: 12px;
                gap: 10px;
            }
            
            .song-info h3 {
                font-size: 16px;
            }
            
            .song-info p {
                font-size: 12px;
            }
            
            .delete-btn {
                padding: 5px;
            }
            
            .delete-btn i {
                width: 16px;
                height: 16px;
            }
        }

        /* Feedback notification styles */
        .notification-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        .notification-bell {
            position: relative;
            background: none;
            border: none;
            color: #b62020;
            cursor: pointer;
            padding: 10px;
            border-radius: 50%;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 45px;
            height: 45px;
        }

        .notification-bell:hover {
            background-color: rgba(182, 32, 32, 0.1);
            transform: scale(1.1);
        }

        .notification-bell i {
            width: 24px;
            height: 24px;
            stroke-width: 1.5;
        }

        .notification-count {
            position: absolute;
            top: 0;
            right: 0;
            background-color: #b62020;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            z-index: 1001;
            overflow-y: auto;
        }

        .modal-content {
            background: linear-gradient(45deg, #1a1a1a, #2a2a2a);
            margin: 50px auto;
            padding: 30px;
            border-radius: 12px;
            max-width: 800px;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            position: relative;
        }

        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            background: none;
            border: none;
            color: #b62020;
            cursor: pointer;
            padding: 8px;
            border-radius: 50%;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 35px;
            height: 35px;
        }

        .close-modal:hover {
            background-color: rgba(182, 32, 32, 0.1);
            transform: scale(1.1);
        }

        .close-modal i {
            width: 20px;
            height: 20px;
            stroke-width: 1.5;
        }

        .modal-title {
            color: #eeecec;
            font-family: 'Pacifico', cursive;
            margin-bottom: 20px;
            padding-right: 40px;
        }

        .feedback-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .feedback-item {
            background: rgba(64, 64, 64, 0.3);
            padding: 15px;
            border-radius: 8px;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .feedback-item:hover {
            background: rgba(64, 64, 64, 0.5);
        }

        .feedback-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .feedback-subject {
            font-weight: bold;
            color: #b62020;
        }

        .feedback-date {
            color: #b3b3b3;
            font-size: 0.9em;
        }

        .feedback-user {
            color: #b3b3b3;
            font-size: 0.9em;
            margin-bottom: 5px;
        }

        .feedback-preview {
            color: #eeecec;
            margin-bottom: 10px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .feedback-details {
            display: none;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid rgba(64, 64, 64, 0.5);
        }

        .feedback-details.show {
            display: block;
        }

        .feedback-message {
            color: #eeecec;
            white-space: pre-wrap;
            line-height: 1.5;
        }

        .feedback-email {
            color: #b3b3b3;
            font-size: 0.9em;
            margin-top: 10px;
        }

        .mark-read-btn {
            background: none;
            border: 1px solid #b62020;
            color: #b62020;
            padding: 5px 10px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.8em;
            transition: all 0.3s ease;
            margin-top: 10px;
        }

        .mark-read-btn:hover {
            background-color: #b62020;
            color: white;
        }

        .no-feedback {
            text-align: center;
            color: #b3b3b3;
            padding: 30px 0;
        }
    </style>
</head>

<body>
    <div class="notification-container">
        <button class="notification-bell" id="notificationBell" title="View Feedback">
            <i data-lucide="bell"></i>
            <% if (unreadFeedbackCount > 0) { %>
                <span class="notification-count"><%= unreadFeedbackCount %></span>
            <% } %>
        </button>
    </div>

    <div class="modal" id="feedbackModal">
        <div class="modal-content">
            <button class="close-modal" id="closeModal">
                <i data-lucide="x"></i>
            </button>
            <h2 class="modal-title">User Feedback</h2>
            
            <div class="feedback-list" id="feedbackList">
                <% if (feedbacks && feedbacks.length > 0) { %>
                    <% feedbacks.forEach(feedback => { %>
                        <div class="feedback-item" data-id="<%= feedback.id %>">
                            <div class="feedback-header">
                                <div class="feedback-subject"><%= feedback.subject %></div>
                                <div class="feedback-date"><%= new Date(feedback.created_at).toLocaleString() %></div>
                            </div>
                            <div class="feedback-user">
                                <strong><%= feedback.name %></strong> (<%= feedback.username %>)
                            </div>
                            <div class="feedback-preview"><%= feedback.message %></div>
                            <div class="feedback-details">
                                <div class="feedback-message"><%= feedback.message %></div>
                                <div class="feedback-email">Email: <%= feedback.email %></div>
                                <% if (!feedback.is_read) { %>
                                    <button class="mark-read-btn" data-id="<%= feedback.id %>">Mark as Read</button>
                                <% } %>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="no-feedback">
                        <i data-lucide="inbox" style="width: 48px; height: 48px; margin-bottom: 15px;"></i>
                        <p>No feedback received yet.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>

    <div class="container">
        <h2>Add a New Song</h2>
        <form action="/add-song" method="POST" enctype="multipart/form-data">
            <div class="input-group">
                <i data-lucide="music"></i>
                <input type="text" name="title" placeholder="Song Title" required>
            </div>
            <div class="input-group">
                <i data-lucide="user"></i>
                <input type="text" name="artist" placeholder="Artist" required>
            </div>
            <div class="input-group">
                <i data-lucide="clock"></i>
                <input type="text" name="duration" placeholder="Duration (e.g., 03:45)" required>
            </div>
            <div class="input-group">
                <i data-lucide="globe"></i>
                <input type="text" name="language" placeholder="Language (e.g., English, Hindi)" required>
            </div>
            <div class="input-group">
                <i data-lucide="music-2"></i>
                <input type="text" name="genre" placeholder="Genre (e.g., Pop, Rock, Jazz)" required>
            </div>
            <div class="input-group">
                <i data-lucide="heart"></i>
                <input type="text" name="mood" placeholder="Mood (e.g., Happy, Sad, Energetic)" required>
            </div>
            <div class="file-input-container">
                <i data-lucide="music-2"></i>
                <label>Song File:</label>
                <input type="file" name="song" required>
            </div>
            <div class="file-input-container">
                <i data-lucide="image"></i>
                <label>Cover Image:</label>
                <input type="file" name="cover" required>
            </div>
            <button type="submit">
                <i data-lucide="upload"></i>
                Upload Song
            </button>
        </form>

        <div class="songs-list">
            <h2>Uploaded Songs</h2>
            <ul>
                <% songs.forEach(song=> { %>
                    <li>
                        <div class="song-info">
                            <strong><%= song.title %></strong>
                            <div class="song-info-row">
                                <i data-lucide="user"></i>
                                <span><%= song.artist %></span>
                            </div>
                            <div class="song-info-row">
                                <i data-lucide="clock"></i>
                                <span><%= song.duration %></span>
                            </div>
                            <div class="song-info-row">
                                <i data-lucide="globe"></i>
                                <span><%= song.language %></span>
                            </div>
                            <div class="song-info-row">
                                <i data-lucide="music-2"></i>
                                <span><%= song.genre %></span>
                            </div>
                            <div class="song-info-row">
                                <i data-lucide="heart"></i>
                                <span><%= song.mood %></span>
                            </div>
                        </div>
                        <form action="/delete-song" method="POST">
                            <input type="hidden" name="songId" value="<%= song.id %>">
                            <button type="submit" class="delete-btn" title="Delete song">
                                <i data-lucide="trash-2"></i>
                            </button>
                        </form>
                    </li>
                <% }); %>
            </ul>
        </div>
    </div>

    <script>
        lucide.createIcons();
        
        // Feedback modal functionality
        const notificationBell = document.getElementById('notificationBell');
        const feedbackModal = document.getElementById('feedbackModal');
        const closeModal = document.getElementById('closeModal');
        const feedbackItems = document.querySelectorAll('.feedback-item');
        
        // Open modal when bell is clicked
        notificationBell.addEventListener('click', () => {
            feedbackModal.style.display = 'block';
        });
        
        // Close modal when X is clicked
        closeModal.addEventListener('click', () => {
            feedbackModal.style.display = 'none';
        });
        
        // Close modal when clicking outside
        window.addEventListener('click', (event) => {
            if (event.target === feedbackModal) {
                feedbackModal.style.display = 'none';
            }
        });
        
        // Toggle feedback details when item is clicked
        feedbackItems.forEach(item => {
            item.addEventListener('click', () => {
                const details = item.querySelector('.feedback-details');
                details.classList.toggle('show');
            });
        });
        
        // Mark feedback as read
        document.querySelectorAll('.mark-read-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                e.stopPropagation(); // Prevent toggling details
                const feedbackId = btn.getAttribute('data-id');
                
                fetch('/mark-feedback-read', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ feedbackId }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        btn.remove();
                        // Update notification count
                        const countElement = document.querySelector('.notification-count');
                        if (countElement) {
                            const currentCount = parseInt(countElement.textContent);
                            if (currentCount > 1) {
                                countElement.textContent = currentCount - 1;
                            } else {
                                countElement.remove();
                            }
                        }
                    }
                })
                .catch(error => console.error('Error marking feedback as read:', error));
            });
        });
    </script>
</body>

</html>